{"version":3,"sources":["logo.svg","MobileWebSponsorship.png","DesktopWebExample.png","config_example.js","hash.js","PiChart.js","GraphScreen.js","supabase/index.js","App.js","serviceWorker.js","index.js","anthemsbanner.png"],"names":["module","exports","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","PiChart","chartData","artistToGenres","HtmlToReactParser","className","Helmet","name","content","data","options","plugins","title","display","text","color","legend","position","labels","padding","boxWidth","font","size","tooltip","callbacks","label","context","initialLabel","artists","map","artist","genresArr","includes","push","artistName","length","GraphScreen","token","useState","setArtistToGenres","setDataObj","axios","require","piData","setPiData","isMounted","setIsMounted","indexOfMax","arr","max","maxIndex","i","useEffect","topArtists","a","headers","get","then","response","items","currArtistsToGenres","index","genres","console","log","unorganizedGenres","allGenres","concat","frequency","genre","keys","Object","vals","values","finalArr","currIndex","splice","finalObj","sum","partialSum","currPiData","datasets","value","Math","round","backgroundColor","borderColor","radius","getTopArtists","currCSS","createClient","autoRefreshToken","persistSession","App","useMediaQuery","query","setToken","username","setUsername","currUsername","mToken","access_token","display_name","getUsername","rel","href","async","src","crossorigin","join","anthemsBanner","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a592d63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/MobileWebSponsorship.35317ee4.png\";","module.exports = __webpack_public_path__ + \"static/media/DesktopWebExample.f74d209c.png\";","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"e06a8e4468034056a35e699e61e7b0cb\";\n//export const redirectUri =\"http://www.spotifypie.com\";\nexport const redirectUri = \"https://huangdarren1106.github.io\";\n//export const redirectUri = \"http://localhost:3000/redirect\";\nexport const scopes = [\n    \"user-top-read\",\n    \"user-read-currently-playing\",\n    \"user-read-playback-state\",\n];\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","import 'chart.js/auto';\nimport './GraphScreen.css'\nimport { Pie } from \"react-chartjs-2\";\nimport Helmet from \"react-helmet\";\nimport React, { useState, useEffect } from \"react\";\nimport { Parser as HtmlToReactParser } from 'html-to-react';\n\nexport default function PiChart({ chartData, artistToGenres }) {\n    const htmlToReactParser = new HtmlToReactParser();\n\n    return (\n        <div className='PiChart'>\n            <head>\n                <Helmet>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n                </Helmet>\n            </head>\n            <Pie\n                data={chartData}\n                options={{\n\n                    plugins: {\n                        title: {\n                            display: false,\n                            text: \"Your Top Genres\",\n                            color: \"#000000\"\n                        },\n                        legend: {\n                            display: true,\n                            position: \"bottom\",\n                            \n                            labels: {\n                                padding:6,\n                                boxWidth: 20,\n                                color: \"#000000\",\n                                font: {\n                                    size: 13\n\n                                }\n                            }\n\n                        },\n                        tooltip: {\n                            callbacks: {\n                                label: function (context) {\n                                    var initialLabel = context.label + \": \";\n                                    var artists = [];\n                                    artistToGenres.map((artist) => {\n                                        if (artist.genresArr.includes(context.label)) {\n                                            artists.push(artist.artistName);\n                                        }\n                                    })\n                                    artists.map((artist) => {\n                                        initialLabel = initialLabel + artist + \", \"\n                                    });\n                                    initialLabel = initialLabel.substring(0, initialLabel.length - 2);\n                                    return initialLabel;\n\n                                }\n                            }\n                        }\n                    }\n                }}\n            />\n\n        </div>\n    );\n};\n","import { pid } from \"process\";\nimport React, { useState, useEffect } from \"react\";\nimport PiChart from './PiChart.js'\nimport './GraphScreen.css'\nimport Helmet from \"react-helmet\";\nexport default function GraphScreen({ token }) {\n\n\n\n    //const [topArtists, setTopArtists] = useState([]);\n    const [artistToGenres, setArtistToGenres] = useState([]);\n    const [dataObj, setDataObj] = useState({});\n    const axios = require(\"axios\");\n    const pretty = require(\"pretty\");\n    const fs = require(\"fs\");\n    const [piData, setPiData] = useState({})\n    const [isMounted, setIsMounted] = useState(false);\n\n    const indexOfMax = (arr) => {\n        if (arr.length === 0) {\n            return -1;\n        }\n\n        var max = arr[0];\n        var maxIndex = 0;\n\n        for (var i = 1; i < arr.length; i++) {\n            if (arr[i] > max) {\n                maxIndex = i;\n                max = arr[i];\n            }\n        }\n\n        return maxIndex;\n    }\n    useEffect(() => {\n        var topArtists = [];\n        const getTopArtists = async (token) => {\n            const headers = {\n                \"Authorization\": \"Bearer \" + token\n            };\n            await axios.get(\"https://api.spotify.com/v1/me/top/artists\", { headers }).then((response) => {\n                //setTopArtists(response.data.items);\n                topArtists = response.data.items;\n                //setTopArtistsActivated(true);\n\n            })\n            const currArtistsToGenres = topArtists.map((artist, index) => {\n                const artistName = artist.name;\n                const genresArr = artist.genres;\n                return {\n                    artistName: artistName,\n                    genresArr: genresArr\n                }\n            })\n            console.log(currArtistsToGenres)\n            setArtistToGenres(currArtistsToGenres);\n            const unorganizedGenres = topArtists.map((artist, index) => {\n                const genreArr = artist.genres;\n                return genreArr;\n            })\n            const allGenres = [].concat(...unorganizedGenres)\n            //sort frequency\n            var frequency = {};\n            allGenres.map((genre) => {\n                frequency[genre] = 0;\n            })\n            allGenres.map((genre) => {\n                frequency[genre] = frequency[genre] + 1;\n            })\n            var keys = Object.keys(frequency);\n            var vals = Object.values(frequency);\n            var a = 0;\n            var finalArr = [];\n            while (a != 20 && keys.length != 0) {\n                var currIndex = indexOfMax(vals);\n                finalArr.push(keys[currIndex]);\n                keys.splice(currIndex, 1);\n                vals.splice(currIndex, 1);\n                a++;\n            }\n            var finalObj = {};\n            finalArr.map((genre) => {\n                finalObj[genre] = frequency[genre];\n            })\n            setDataObj(finalObj)\n            const sum = Object.values(finalObj).reduce((partialSum, a) => partialSum + a, 0);\n            var currPiData = {\n                labels: Object.keys(finalObj),\n                datasets: [\n                    {\n                        label: \"Your Top Genres\",\n                        data: Object.values(finalObj).map((value) => {\n                            return Math.round((value / sum) * 100) / 100;\n                            //return num + \"%\"\n                        }),\n                        backgroundColor: ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080'],\n                        borderColor: \"white\",\n                        radius: \"100%\"\n                    }\n                ]\n            }\n            setPiData(currPiData);\n            setIsMounted(true);\n        }\n        getTopArtists(token);\n    }, [])\n\n\n    if (!isMounted)\n        return (\n            <div className=\"GraphScreen\">\n\n                loading\n\n\n            </div>\n        )\n    return (\n\n            <body className=\"GraphScreen\">\n                <div className=\"PiWrapper\">\n                    <PiChart chartData={piData} artistToGenres={artistToGenres} />\n                </div>\n                <table className=\"TablePi\">\n                    {artistToGenres.map((artist, index) => {\n                        const name = artist.artistName;\n                        var currCSS = \"thArtist\" + index\n                        console.log(index)\n                        return (\n                            <tr className={currCSS}>\n                                <th>{name}</th>\n                            </tr>\n                        );\n                    })}\n                </table>\n            </body>\n    );\n};\n","import { createClient } from '@supabase/supabase-js'\nvar firstURL = 'https://vmwwkmxpakylcjkasjjf.supabase.co'\nvar secondURL = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZtd3drbXhwYWt5bGNqa2FzampmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTkzMTQ5MjAsImV4cCI6MTk3NDg5MDkyMH0.8KNhV2WRUbslog09XoxS1KIlYMMbxfjZd046ImEg32U'\nexport const supabase = createClient(firstURL, secondURL, {autoRefreshToken: true, persistSession: true})\n","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config_example\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport TenTracks from \"./TenTracks\"\nimport GraphScreen from \"./GraphScreen\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Helmet from \"react-helmet\";\nimport { useImage } from 'react-image'\nimport { Img } from 'react-image'\nimport mobileAnthems from './MobileWebSponsorship.png'\nimport desktopAnthems from './DesktopWebExample.png'\nimport anthemsBanner from './anthemsbanner.png'\nimport { useMediaQuery } from 'react-responsive'\nimport { supabase } from \"./supabase\";\n\n\n\nexport default function App() {\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-device-width: 1224px)'\n  })\n  const [session, setSession] = useState(null)\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [topTracksActivated, setTopTracksActivated] = useState(false);\n  const [topArtists, setTopArtists] = useState([]);\n  const [topArtistsActivated, setTopArtistsActivated] = useState(false);\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    //console.log(token)\n\n    var mToken = hash.access_token;\n    if (mToken) {\n      setToken(mToken);\n    }\n    var currUsername;\n    const getUsername = async () => {\n\n      const headers = {\n        \"Authorization\": \"Bearer \" + token\n      };\n      await axios.get(\"https://api.spotify.com/v1/me\", { headers }).then((response) => {\n        //setTopArtists(response.data.items);\n        currUsername = response.data.display_name;\n        setUsername(currUsername);\n\n        //setTopArtistsActivated(true);\n      })\n    }\n    if (token)\n      getUsername();\n\n  }, [token])\n\n  return (\n    <div>\n      <head>\n        <Helmet>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n          <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3723218062742398\"\n            crossorigin=\"anonymous\"></script>\n        </Helmet>\n\n      </head>\n      {!token && <header className=\"Header\">\n        Spotify Pie\n      </header>}\n\n      {!token && <header className=\"Header2\">\n        Bake Your Monthly Genre Pie\n        <b className=\"author\"></b>\n        <br></br>\n\n      </header>}\n      {token && username !== \"\" && <header className=\"Header3\">\n        Pie of {username}\n      </header>}\n      <body className=\"App-body\">\n\n\n        <div className = \"anthwrap\">\n          {!token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n\n          {token && (\n            <GraphScreen token={token} />\n          )}\n          {!token && <a href=\"https://schoolholidays.com.au/blog/is-listening-to-music-a-hobby\"><img className=\"banner\" src={anthemsBanner}></img></a>}\n\n        </div>\n      </body>\n\n    </div>\n  );\n\n}\n\n/*\n<a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n            */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/anthemsbanner.24e9dd65.png\";"],"sourceRoot":""}
